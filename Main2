import pygame as pyg
import numpy as np
import sys
import pyautogui as pya
import time

destino = [0, 0]
# Inicialização do Pygame
pyg.init()
destino = [0, 0]  # Lista para destino do Pincel
# Definição das dimensões do mapa Arrays
largura, altura = 5, 5
# Definindo as cores
cor_vermelha = (139, 0, 0)  # (R, G, B) -> Vermelho: 255, Verde: 0, Azul: 0
cor_verde = (0, 255, 0)  # (R, G, B) -> Verde: 0, Vermelho: 255, Azul: 0
cor_branca = (255, 255, 255)  # (R, G, B) -> Branco: 255, Verde: 255, Azul: 255
# Criando uma lista que contem Arrays bidimensionais para representar os pixeis
lista_arrays = []
array_mapa1 = np.full((5, 5, 3), cor_vermelha, dtype=np.uint8)  # Multiplica por 50
array_mapa2 = np.full((largura * 50, altura * 50, 3), cor_verde, dtype=np.uint8)  # Multiplica por 50
# Fazendo o slicing para que o ponto 0 do array se torne o meio
meio_largura = largura * 50 // 2
lista_arrays.append(array_mapa1)
# Criando a janela para exibir as imagens
tamanho_janela = largura * 100, altura * 100  # Definindo o tamanho da janela (100 pixels por quadrado)
janela = pyg.display.set_mode(tamanho_janela)  # Convertendo em janela PY
# Criando o arr ay branco com tamanho 500x500
array_branco = np.full((500, 500, 3), cor_branca, dtype=np.uint8)
lista_arrays.append(array_branco)

# Função para desenhar o mapa
def desenha_mapa(mapa, destino):
    Imagem1 = pyg.surfarray.make_surface(array_branco)
    imagem = pyg.surfarray.make_surface(mapa)
    janela.blit(Imagem1, (0, 0))
    janela.blit(imagem, tuple(destino))
    pyg.display.flip()

# Função para atualizar a posição do destino
def atualiza_destino(destino, mouse_rel):
    destino[0] += mouse_rel[0]
    destino[1] += mouse_rel[1]
    return destino

# Loop principal do jogo
running = True
while running:
    for event in pyg.event.get():
        if event.type == pyg.QUIT:
            running = False

    # Verifica se o mouse está focado
    foco_mouse = pyg.mouse.get_focused()

    # Se o mouse estiver focado, atualiza o destino
    if foco_mouse:
        mouse_rel = pyg.mouse.get_rel()
        destino = atualiza_destino(destino, mouse_rel)
        desenha_mapa(array_mapa1, destino)

# Encerra o Pygame
pyg.quit()
sys.exit()
